/**
 * ResearchSpace
 * Copyright (C) 2022-2024, © Kartography Community Interest Company
 * Copyright (C) 2015-2020, © Trustees of the British Museum
 * Copyright (C) 2015-2019, metaphacts GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
@import '~basic-styles.scss';

.mapLayersFiltersContainer {
  padding: 5px;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  border-radius: 3px;
  margin-top: 5px;
  margin-bottom: 5px;
  -webkit-box-shadow: 1px 1px 3px 0px rgb(137 137 137 / 30%);
  box-shadow: 1px 1px 3px 0px rgb(137 137 137 / 30%);
  height: auto;
  width: 98%;
  margin-left: 1%;
  background-color:rgba(255, 255, 255, 0.7);
}

.mapLayersFiltersContainer label {
  margin-right: 2px;
}

.mapLayersFilters {
  margin-left: 3px !important;
  margin-right: 3px !important;
}

#navigatorContainer input {
  margin-top: 5px;
}

#mapControlsTitle {
  margin-bottom: 20px;
  font-weight: 200;
  font-size: 20pt;
}

.draggableLayer {
  border-radius: 3px;
  margin-top: 5px;
  margin-bottom: 5px;
  /* -webkit-box-shadow: 1px 1px 3px 0px rgb(137 137 137 / 30%);
  box-shadow: 1px 1px 3px 0px rgb(137 137 137 / 30%); */
  backdrop-filter: blur(3px);
  height: auto;
  width: 98%;
  margin-left: 1%;
  background-color:rgb(237,237,237);
  padding: 5px;
}

.draggableMaskLayer {
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  border-radius: 3px;
  margin-top: 5px;
  margin-bottom: 5px;
  -webkit-box-shadow: 1px 1px 3px 0px rgb(137 137 137 / 30%);
  box-shadow: 1px 1px 3px 0px rgb(137 137 137 / 30%);
  backdrop-filter: blur(3px);
  height: 70px;
  width: 98%;
  margin-left: 1%;
  background-color:rgb(255, 255, 255)
}

#visualizationModeContainer, .layerMaskIcon.fa-eye {
  background-color: rgb(249 249 249);
  box-shadow: inset 2px 2px 2px rgba(200,200,200,0.5);
}

#visualizationModeContainer {
  padding: 3px;
  border-radius: 3px;
  margin-top: 3px;
}

#visualizationModeContainer label {
  font-weight: 300;
  margin: 5px;
  vertical-align: middle;
  font-size: 10pt;
}

#visualizationModeContainer label input {
  margin-left: 4px;
}

.timeSliderContainer {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  width: 60%;
  background-color: rgba(255, 255, 255, 0.8);
  padding: 10px 20px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  z-index: 99999;
  pointer-events: auto;
  margin: 0;
  animation: timelineAppear 1s ease-out forwards;
}

@keyframes timelineAppear {
  0% { opacity: 0; transform: translateX(-50%) translateY(50px); }
  100% { opacity: 1; transform: translateX(-50%) translateY(0); }
}

.timelineSlider {
  width: 100%;
  height: 6px;
  -webkit-appearance: none;
  appearance: none;
  background: linear-gradient(to right, #3498db, #2ecc71);
  outline: none;
  border-radius: 3px;
}

.timelineSlider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #fff;
  border: 2px solid #3498db;
  cursor: pointer;
  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);
}

.timelineSlider::-moz-range-thumb {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #fff;
  border: 2px solid #3498db;
  cursor: pointer;
  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);
}

/* Styles for disabled timeline slider */
.timelineSlider:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.timelineSlider:disabled::-webkit-slider-thumb {
  background: #ccc;
  border-color: #999;
  cursor: not-allowed;
}

.timelineSlider:disabled::-moz-range-thumb {
  background: #ccc;
  border-color: #999;
  cursor: not-allowed;
}

.yearLabel {
  position: fixed;
  bottom: 70px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 24px !important;
  font-weight: bold;
  color: #333;
  text-shadow: 0 0 5px #fff;
  z-index: 100000;
  pointer-events: none;
}

@keyframes yearPulse {
  0% { transform: translateX(-50%) scale(1); }
  50% { transform: translateX(-50%) scale(1.1); }
  100% { transform: translateX(-50%) scale(1); }
}

.yearLabel.pulse {
  animation: yearPulse 0.5s ease-in-out;
}

.timeline-ticks {
  display: flex;
  justify-content: space-between;
  margin-top: 5px;
  padding: 0 10px;
}

.timeline-tooltip {
  position: fixed;
  left: 40px;
  top: 20px;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 10px;
  border-radius: 5px;
  width: 250px;
  font-size: 12px;
  display: none;
  z-index: 100001;
}

.mapLayersTitle {
  margin-left: 1%;
  font-weight: 100;
}

.mapControlsSeparator {
  margin: 15px auto !important;
  height: 2px !important;
  background-color: #ddd;
  width: 40px;
  border: none;
}

.layerTitle {
  font-weight: 600 !important;
  width: 100px;
}

.layerLabel {
  font-size: 10pt;
  font-weight: lighter;
  display: block !important;
}

.layersContainer {
  background-color: white;
  padding: 5px;
  border-radius: 3px;
  /* box-shadow: 2px 3px 9px 0px #2929294d; */
}

.featuresOptionsContainer {
  background-color: white;
  padding: 5px;
  border-radius: 3px;
}

.featuresOptionsTitle, .mapOptionsSectionTitle {
  margin-left: 1%;
  font-weight: 100;
}

.layerThumbnail {
  border-radius: 50%;
  border: 1px solid rgba(255, 255, 255, 0.2) !important;
  height: 60px;
  width: 60px;
  object-fit: cover;
  margin-left: 5px;
}

.togglesColumn .fa {
  color: rgb(56, 56, 56);
}

.togglesColumnLeft .fa-bars {
  color: #B1B1B1;
  font-size: 15pt;
}

.togglesColumnLeft, .togglesColumnRight {
  display: inline-block;
  height: auto;
  padding: 2px;
}

.togglesColumnLeft {
  vertical-align: middle;
  width: 35px;
}

.togglesColumnRight {
  text-align: center;
  position: absolute;
  height: 96% !important;
  width: 20px;
}

.layerCheck {
  top: 0;
  font-size: 20pt;
  color: var(--archipelago-gold);
}

.layerCheck.fa-toggle-off {
  color: darkgrey !important;
}

.layerMaskIcon {
  position:absolute;
  bottom: -5px;
  right: 0;
  padding: 3px;
  padding-bottom: 15px;
}

.visualizationModeRadio {
  vertical-align: middle;
  margin-top: 0 !important;
}

.layerMaskIcon.fa-eye {
  border-radius: 2px 2px 0 0;
  padding: 5px;
  bottom: 30px !important;
}

.toggle3dBtn {
  padding: 10px;
  width: 100px;
}

.opacitySlider {
  width: 100%;
  height: 2px;
  background-image: linear-gradient(to right, var(--color-dark), var(--color-dark));
  outline: none;
  -webkit-transition: .2s;
  transition: opacity .2s;
}

.opacitySlider::-webkit-slider-thumb {
  appearance: none;
  width: 15px;
  height: 15px;
  background: var(--color-dark);
  border: 1px solid var(--color-dark);
  border-radius: 50%;
  cursor: pointer;
  background-image: linear-gradient(var(--color-dark), var(--color-dark)), linear-gradient(to right, rgba(255,250,250, 0.00), rgb(0,60,51));
  background-attachment: fixed, fixed;
  background-clip: padding-box, border-box;
}

.opacitySlider::-moz-range-thumb {
  width: 15px;
  height: 15px;
  background: var(--color-dark);
  border: 1px solid var(--color-dark);
  border-radius: 50%;
  cursor: pointer;
  background-image: linear-gradient(white, white), linear-gradient(to right, rgba(255,250,250, 0.00), rgb(0,60,51));
  background-attachment: fixed, fixed;
  background-clip: padding-box, border-box;
}

.cesium-credit-logoContainer {
  display: none !important;
}

.featuresOptionsDiv {
  display: block;
}

#veniss_navbar {
  height: var(--nav-height) !important;
}

.clonedNavbar:nth-child(2) {
  display: none !important;
}

.yearLabel {
  text-shadow: 0px 0px 5px #ffffff;
  font-family: 'Lato' sans-serif;
}

.colorsLegend {
  background-color: white;
  border-radius: 5px;
  z-index: 100000000;
  padding: 10px;
  position: fixed; /* Changed from absolute to fixed for consistent positioning */
  top: 70px; /* Position at the top of the screen with some margin */
  right: 30px; /* Position at the right of the screen with some margin */
  width: auto; /* Auto width to fit content */
  min-width: 150px; /* Minimum width for stability */
  max-width: 250px; /* Maximum width for readability */
  box-shadow: 0 0 15px rgba(0,0,0,0.2);
  pointer-events: auto;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  overflow: visible; /* Changed from hidden to visible to allow color picker to overflow */
}

/* No longer need these classes since we're not animating based on panel state */
.colorsLegendExternal, .colorsLegendWithPanel {
  /* No animations needed */
}

/* Hover effect - keeping this for consistency */
.colorsLegend:hover {
  transform: scale(1.05);
  box-shadow: 0 0 20px rgba(0,0,0,0.3);
}

/* Button container - initially hidden */
.colorsLegend > div:first-child {
  max-height: 0;
  opacity: 0;
  transition: max-height 0.3s ease, opacity 0.3s ease, margin-bottom 0.3s ease;
  overflow: hidden;
  margin-bottom: 0;
}

/* Show buttons on hover */
.colorsLegend:hover > div:first-child {
  max-height: 50px; /* Enough height for the buttons */
  opacity: 1;
  margin-bottom: 10px;
}

/* Animate disabled color groups */
.disabledColorGroup {
  max-height: 0;
  height: 0;
  opacity: 0;
  margin: 0 !important;
  padding: 0;
  border: 0;
  overflow: hidden;
  position: absolute;
  pointer-events: none;
  transition: max-height 0.3s ease, opacity 0.3s ease, margin 0.3s ease, height 0.3s ease;
}

/* Show all color groups on hover, including disabled ones */
.colorsLegend:hover .disabledColorGroup {
  max-height: 50px; /* Enough height for the content */
  height: auto;
  opacity: 1;
  margin: 5px !important;
  position: relative;
  pointer-events: auto;
  display: flex;
}

/* Individual color group hover effect - removed scaling */
[id^="color-"] {
  /* No transitions needed */
}

[id^="color-"]:hover {
  z-index: 1; /* Keep z-index change on hover */
}

/* No text effects on hover for color group labels */
[id^="color-"] label {
  /* No transitions needed */
}

/* No text style changes on hover */

/* Color picker container styles */
.colorPickerContainer {
  position: absolute;
  z-index: 2;
}

/* Color picker styles */
:global(.swatches-picker) {
  z-index: 9999999 !important; /* Ensure color picker is on top of everything */
  position: absolute !important;
  left: -320px !important; /* Position to the left of the colorsLegend */
  top: 0 !important; /* Align with the top of the parent element */
  transform: none !important; /* Override any transform that might be applied */
  opacity: 1 !important; /* Ensure it's fully visible by default */
  transition: opacity 0.5s ease !important; /* Add fade transition */
  animation: swatchesPickerFadeIn 0.3s ease-out !important; /* Initial fade in animation */
}

/* Add a fade-in animation for the color picker */
@keyframes swatchesPickerFadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Add a fade-out animation for the color picker */
.colorPickerFadeOut {
  animation: swatchesPickerFadeOut 0.5s ease-out forwards !important;
}

@keyframes swatchesPickerFadeOut {
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.95); }
}

/* Button styles */
.colorsLegend button {
  background-color: #f5f5f5;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 4px 8px;
  font-size: 12px;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.colorsLegend button:hover {
  background-color: #e0e0e0;
}

/* These animations are no longer needed since the legend has a fixed position */

.filtersLabel {
  margin-right: 10px;
}

.timelineSlider {
  color: red;
}

/* New styles for the sidebar and panels */
.mapControlsContainer {
  position: absolute;
  width: auto; /* Allow container to expand */
  height: 100%;
  z-index: 1000;
  pointer-events: none;
}

.mapControlsSidebar {
  display: flex;
  flex-direction: column;
  background-color: #fff;
  border-right: 1px solid #ddd;
  width: 60px;
  height: 100%;
  padding: 10px 0;
  align-items: center;
  z-index: 1002; /* Higher than the panel to ensure it's always on top */
  pointer-events: auto;
  position: relative; /* Ensure z-index works properly */
}

.mapControlsButton {
  width: 50px;
  height: 50px;
  margin: 5px 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 4px;
  border: none;
  background-color: #fff;
  /*box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);*/
  cursor: pointer;
  transition: all 0.3s;
}

.mapControlsDivider {
  width: 30px;
  height: 1px;
  background-color: #ddd;
  margin: 10px auto;
}

.mapControlsButtonActive {
  color: #333;
  background-color: #f0f0f0; /* Light grey background when active */
  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.1); /* Inner shadow for depth */
  border-left: 3px solid $color-light; /* Accent border on the left */
}

.mapControlsButtonActive .fa {
  color: $color-light; /* Change icon color when active */
  transform: scale(1.1); /* Slightly larger icon */
}

.mapControlsPanel {
  margin-top: 63px;
  position: fixed; /* Use fixed positioning to break out of container */
  left: 60px; /* Position it right after the sidebar */
  top: 0;
  width: 390px;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.95); /* Semi-transparent */
  backdrop-filter: blur(5px); /* Adds a blur effect behind */
  box-shadow: 0 0 15px rgba(0,0,0,0.2);
  padding: 15px;
  overflow-y: auto;
  z-index: 1001; /* Higher than sidebar */
  transition: opacity 0.3s ease-in-out; /* Only transition opacity by default */
  border-left: 1px solid rgba(0,0,0,0.1);
  pointer-events: auto;
}

/* Animation class for panel opening */
.mapControlsPanelOpening {
  animation: panelAppear 0.3s ease-out forwards;
}

/* Animation class for panel closing */
.mapControlsPanelClosing {
  animation: panelDisappear 0.3s ease-out forwards;
}

@keyframes panelAppear {
  0% { 
    opacity: 0; 
    transform: translateX(-100%);
  }
  100% { 
    opacity: 1; 
    transform: translateX(0);
  }
}

@keyframes panelDisappear {
  0% { 
    opacity: 1; 
    transform: translateX(0);
  }
  100% { 
    opacity: 0; 
    transform: translateX(-100%);
  }
}

.mapControlsPanelHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
  padding-bottom: 10px;
  margin-top: 25px;
  border-bottom: 1px solid rgba(0,0,0,0.1);
}

.mapControlsPanelTitle {
  margin: 0;
  font-size: 18px;
  font-weight: 500;
  color: #333;
}

.mapControlsPanelCloseButton {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 16px;
  color: #666;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s;
}

.mapControlsPanelCloseButton:hover {
  background-color: rgba(0,0,0,0.05);
  color: #333;
}

.mapControlsPanelCloseX {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 30px;
  height: 30px;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  z-index: 1002; /* Higher than the panel */
  border: none;
  transition: all 0.2s ease;
}

.mapControlsPanelCloseX:hover {
  background-color: rgba(240, 240, 240, 1);
  transform: scale(1.1);
}

/* Feature template styles */
.featureTemplateContainer {}

.featureTemplateCloseButton {
  position: absolute;
  top: 5px;
  right: 5px;
  background: white;
  border: none;
  cursor: pointer;
  font-size: 16px;
  color: #666;
  padding: 5px 7px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1001;
  
  &:hover {
    background-color: #f0f0f0;
    color: #333;
  }
}

/* Template container styles - keeping for backward compatibility */
.templateContainer {
  position: relative;
  padding: 15px;
  background-color: white;
  border-radius: 4px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  margin-top: 10px;
  pointer-events: auto;
}

.templateCloseButton {
  position: absolute;
  top: 5px;
  right: 5px;
  background: none;
  border: none;
  cursor: pointer;
  font-size: 16px;
  color: #666;
  padding: 5px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:hover {
    background-color: #f0f0f0;
    color: #333;
  }
}
/* Styles for the map layers in the forEach loop */
/* Updated styles for the draggable layer layout */
.draggableLayerBorder {
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  border-radius: 4px;
}

/* Main container for the draggable layer */
.draggableLayerContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  position: relative;
}

/* Left column with drag handle */
.leftColumnContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 35px;
  height: 100%;
  cursor: grab;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  z-index: 1;
}

.leftColumnContainer i {
  font-size: 18px;
  color: #888;
}

/* Main content container */
.layerContentContainer {
  display: flex;
  flex: 1;
  position: relative;
  padding: 5px 5px 5px 40px; /* Add left padding to make room for the drag handle */
}

/* Thumbnail container */
.thumbnailContainer {
  display: flex;
  align-items: center;
  margin-right: 10px;
}
/* Thumbnail image style */
.layerThumbnailStyle {
  border-radius: 50%;
  border: 1px solid rgba(255, 255, 255, 0.2);
  height: 60px;
  width: 60px;
  object-fit: cover;
}

/* Info container for title and other details */
.layerInfoContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex: 1;
  position: relative;
  min-height: 60px;
}

/* Title container */
.layerTitleContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
}

/* Date display in top right */
.layerDateContainer {
  position: absolute;
  top: 0;
  right: 30px;
  font-size: 12px;
  color: #666;
}

/* Toggle buttons container */
.togglesColumnRightStyle {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 5px;
}

.togglesColumnRightStyle .fa-toggle-on {
  font-size: 20px;
  color: #4CAF50;
}

.togglesColumnRightStyle .fa-toggle-off {
  font-size: 20px;
  color: #999;
}

/* Opacity slider container at the bottom */
.opacitySliderContainer {
  width: 100%;
  padding: 8px 5px 5px 5px;
  border-top: 1px solid #eee;
  display: flex;
  flex-direction: column;
  margin-top: 5px;
}

/* Opacity slider label */
.opacitySliderLabel {
  margin-bottom: 5px;
  font-size: 12px;
  color: #666;
}

.cursorPointer {
  cursor: pointer;
}

.maskIconInactive {
  cursor: pointer;
  color: rgba(200, 200, 200, 1);
}

/* Override OpenLayers default zoom control positioning */
.ol-zoom,
div.ol-zoom,
.ol-viewport .ol-zoom,
html body .ol-zoom,
.ol-overlaycontainer-stopevent .ol-zoom,
.ol-overlaycontainer .ol-zoom,
.ol-unselectable .ol-zoom,
.ol-viewport > .ol-zoom,
:global(.ol-zoom) {
  position: absolute !important;
  right: 20px !important;
  bottom: 20px !important;
  top: auto !important;
  left: auto !important;
  z-index: 1000 !important;
}

/* Target the individual zoom buttons to ensure they're properly positioned */
.ol-zoom .ol-zoom-in,
.ol-zoom .ol-zoom-out,
:global(.ol-zoom .ol-zoom-in),
:global(.ol-zoom .ol-zoom-out) {
  position: relative !important;
  display: block !important;
}

/* Visualization mode notification */
.visualizationModeNotification {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 8px 16px;
  border-radius: 4px;
  font-size: 14px;
  z-index: 2000;
  pointer-events: none;
  text-align: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateX(-50%) translateY(-10px); }
  to { opacity: 1; transform: translateX(-50%) translateY(0); }
}

/* Swipe button styles */
.swipeButton {
  position: absolute;
  width: 30px;
  height: 30px;
  background-color: white;
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
  cursor: grab;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  touch-action: none;
  border: 2px solid #3498db;
  transition: transform 0.1s ease-out;
}

.swipeButton:hover {
  transform: scale(1.1);
}

.swipeButton:active {
  cursor: grabbing;
  transform: scale(1.05);
}

.swipeButton::after {
  content: '';
  display: block;
  width: 10px;
  height: 10px;
  background-color: #3498db;
  border-radius: 50%;
}

.swipeButtonHidden {
  display: none;
}

/* Measurement tool styles */
.ol-tooltip {
  position: relative;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 4px;
  color: white;
  padding: 4px 8px;
  opacity: 0.7;
  white-space: nowrap;
  font-size: 12px;
  cursor: default;
  user-select: none;
}

.ol-tooltip-measure {
  opacity: 1;
  font-weight: bold;
}

.ol-tooltip-static {
  background-color: #ffcc33;
  color: black;
  border: 1px solid white;
}

.ol-tooltip-measure:before,
.ol-tooltip-static:before {
  border-top: 6px solid rgba(0, 0, 0, 0.5);
  border-right: 6px solid transparent;
  border-left: 6px solid transparent;
  content: "";
  position: absolute;
  bottom: -6px;
  margin-left: -7px;
  left: 50%;
}

.ol-tooltip-static:before {
  border-top-color: #ffcc33;
}

.ol-tooltip.hidden {
  display: none;
}
