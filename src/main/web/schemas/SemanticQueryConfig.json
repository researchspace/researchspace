{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "properties": {
        "className": {
            "description": "CSS classes for component holder element.",
            "type": "string"
        },
        "noResultTemplate": {
            "description": "<semantic-link iri='http://help.researchspace.org/resource/TemplatingSystem' target=\"_blank\">Template</semantic-link> which is applied when query returns no results.",
            "type": "string"
        },
        "query": {
            "description": "SPARQL SELECT query string.",
            "type": "string"
        },
        "style": {
            "description": "CSS styles for component holder element.",
            "type": "string"
        },
        "template": {
            "description": "<semantic-link iri='http://help.researchspace.org/resource/TemplatingSystem' target=\"_blank\">Template</semantic-link>, \nthat gets a <a target='_blank' href='https://www.w3.org/TR/sparql11-results-json/#select-results' draggable='false'>bindings</a> object \ninjected as template context i.e. the result binding to iterate over. \n<a href='https://handlebarsjs.com/guide/builtin-helpers.html#each' class='text-link-action' target='_blank' draggable='false'>each helper</a>\ncan be used to iterate over the bindings.\nThe template will only be rendered if and only if the result is not empty, so that one does not need to have additional if expressions around the component in order to hide it, for example, a list header if actually no result are to be displayed.\n**Example:** `My Result: {{#each bindings}}{{bindingName.value}}{{/each}}` .\n**Default:** If no template is provided, all tuples for the first projection variable will we rendered as a comma-separated list.",
            "type": "string"
        }
    },
    "propertyOrder": [
        "query",
        "template",
        "noResultTemplate",
        "className",
        "style"
    ],
    "required": [
        "query"
    ],
    "type": "object"
}

