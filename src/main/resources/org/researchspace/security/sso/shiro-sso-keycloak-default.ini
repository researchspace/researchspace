[main]
## Parameters

# keycloak server base URI
# e.g. keycloakBaseUri.value = http://local-keycloak:8090/auth
keycloakBaseUri = org.researchspace.security.sso.utils.ConfigParameterStringValueFactory
keycloakBaseUri.value = ${RS_SSO_KEYCLOAK_BASE_URI}

# keycloak realm id
# e.g. realm.value = my_realm
realm = org.researchspace.security.sso.utils.ConfigParameterStringValueFactory
realm.value = ${RS_SSO_KEYCLOAK_REALM}

# https://tools.ietf.org/html/rfc6749#section-2.2
clientId = org.researchspace.security.sso.utils.ConfigParameterStringValueFactory
clientId.value = \${RS_SSO_CLIENT_ID}

# https://tools.ietf.org/html/rfc6749#section-2.3.1
clientSecret = org.researchspace.security.sso.utils.ConfigParameterStringValueFactory
clientSecret.value = \${RS_SSO_CLIENT_SECRET}

scope = org.researchspace.security.sso.utils.ConfigParameterStringValueFactory
scope.value=openid email profile

principalNameAttribute = org.researchspace.security.sso.utils.ConfigParameterStringValueFactory
principalNameAttribute.value = preferred_username

# optional
# e.g defaultRole.value = guest
defaultRoles = org.researchspace.security.sso.utils.ConfigParameterListValueFactory
defaultRoles.value = null

centralLogout = org.researchspace.security.sso.utils.ConfigParameterBooleanValueFactory
centralLogout.value = true

logoutRedirectUrl = org.researchspace.security.sso.utils.ConfigParameterStringValueFactory
logoutRedirectUrl.value = $platformBaseIri

## pac4j configuration

# https://tools.ietf.org/html/rfc6749#section-3.1.2
redirectUri = org.researchspace.security.sso.utils.RedirectUriValueFactory
redirectUri.instanceBaseUri = $platformBaseIri

shiroRealm = org.researchspace.security.sso.SSORealm
shiroRealm.principalNameAttribute = $principalNameAttribute

keycloakConfig = org.pac4j.oidc.config.KeycloakOidcConfiguration
keycloakConfig.baseUri = $keycloakBaseUri
keycloakConfig.realm = $realm
keycloakConfig.clientId = $clientId
keycloakConfig.secret = $clientSecret
keycloakConfig.scope = $scope

authGenerator = org.researchspace.security.sso.KeycloakAuthorizationGenerator
authGenerator.defaultRoles = $defaultRoles
authGenerator.clientId = $clientId
authGenerator.textRealm = $textRealm

keycloakClient = org.pac4j.oidc.client.KeycloakOidcClient
keycloakClient.authorizationGenerator = $authGenerator
keycloakClient.configuration = $keycloakConfig
keycloakClient.callbackUrl = $redirectUri

clients = org.pac4j.core.client.Clients
clients.clients = $keycloakClient

shiroProfileManagerFactory = org.researchspace.security.sso.ShiroProfileManagerFactory

config = org.pac4j.core.config.Config
config.clients = $clients
config.profileManagerFactory = $shiroProfileManagerFactory

subjectFactory = io.buji.pac4j.subject.Pac4jSubjectFactory
securityManager.subjectFactory = $subjectFactory

securityFilter =  org.pac4j.jee.filter.SecurityFilter
securityFilter.config = $config
securityFilter.clients = KeycloakOidcClient

# override authorizers to disable CSRF one which is enabled by default, we can't use default CSRF implementation from pac4j because we send many requests in parallel. For pac4j one to work one would need to send requests synchronously  
securityFilter.authorizers = isAuthenticated

callbackFilter =  org.pac4j.jee.filter.CallbackFilter
callbackFilter.defaultClient = KeycloakOidcClient
callbackFilter.config = $config

logoutFilter = org.pac4j.jee.filter.LogoutFilter
logoutFilter.config = $config
logoutFilter.localLogout = true
logoutFilter.centralLogout = $centralLogout
logoutFilter.defaultUrl = $logoutRedirectUrl
